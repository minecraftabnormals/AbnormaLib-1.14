<?xml version="1.0"?>
<!-- https://checkstyle.org -->
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <!-- Checker properties                                        -->
    <!-- See https://checkstyle.org/config.html#Checker_Properties -->
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java"/>
    <property name="localeLanguage" value="en"/>
    <property name="localeCountry" value="US"/>
    <property name="tabWidth" value="4"/>

		<module name="NewlineAtEndOfFile"/>

		<!-- disallow trailing whitespace -->
		<module name="RegexpSingleline">
			<property name="format" value="\s+$"/>
			<property name="message" value="trailing whitespace"/>
		</module>

		<!-- note: RegexpMultiline shows nicer messages than Regexp, but has to be outside TreeWalker -->
		<!-- disallow multiple consecutive blank lines -->
		<module name="RegexpMultiline">
			<property name="format" value="\n[\t ]*\r?\n[\t ]*\r?\n"/>
			<property name="message" value="adjacent blank lines"/>
		</module>

		<!-- disallow blank after { -->
		<module name="RegexpMultiline">
			<property name="format" value="\{[\t ]*\r?\n[\t ]*\r?\n"/>
			<property name="message" value="blank line after '{'"/>
		</module>

		<!-- disallow blank before } -->
		<module name="RegexpMultiline">
			<property name="format" value="\n[\t ]*\r?\n[\t ]*\}"/>
			<property name="message" value="blank line before '}'"/>
		</module>

		<!-- require blank after } in the same indentation level -->
		<module name="RegexpMultiline">
			<!-- \n<indentation>}\n<same indentation><whatever unless newline, '}' or starting with cas(e) or def(ault)> -->
			<property name="format" value="(?&lt;=\n)([\t]+)\}\r?\n\1(?:[^\r\n\}cd]|c[^\r\na]|ca[^\r\ns]|d[^\r\ne]|de[^\r\nf])"/>
			<property name="message" value="missing blank line after block at same indentation level"/>
		</module>

    <module name="TreeWalker">

        <!-- Checks for imports                             -->
        <!-- See https://checkstyle.org/config_imports.html -->
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="ImportOrder">
            <property name="groups" value="java,javax,*,com.mojang.blaze3d,net.minecraft,org.quiltmc,net.fabricmc,io.github.vampirestudios.vampirelib"/>
            <property name="ordered" value="false"/><!-- the plugin orders alphabetically without considering separators.. -->
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>

        <!-- Ensures braces are at the end of a line -->
        <module name="LeftCurly"/>
        <module name="RightCurly"/>

        <!-- single line statements on one line, -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_IF,LITERAL_FOR,LITERAL_WHILE"/>
            <property name="allowSingleLineStatement" value="true"/>
        </module>
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_ELSE,LITERAL_DO"/>
            <property name="allowSingleLineStatement" value="false"/>
        </module>

				<module name="OperatorWrap"/>
				<module name="SeparatorWrap">
					<property name="tokens" value="DOT,ELLIPSIS,AT"/>
					<property name="option" value="nl"/>
				</module>
				<module name="SeparatorWrap">
					<property name="tokens" value="COMMA,SEMI"/>
					<property name="option" value="eol"/>
				</module>

				<module name="Indentation">
					<property name="basicOffset" value="4"/>
					<property name="caseIndent" value="4"/>
					<property name="throwsIndent" value="4"/>
					<property name="arrayInitIndent" value="4"/>
					<property name="lineWrappingIndentation" value="8"/>
				</module>

        <!-- Checks for class design                       -->
        <!-- See https://checkstyle.org/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="OneTopLevelClass"/>

        <!-- Checks for annotations                            -->
        <!-- See https://checkstyle.org/config_annotation.html -->
        <module name="AnnotationLocation"/>
        <module name="MissingOverride"/>

        <!-- Checks for modifiers                             -->
        <!-- See https://checkstyle.org/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for common coding problems             -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="ArrayTrailingComma"/> <!-- cleaner diffs -->
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="DefaultComesLast">
            <property name="skipIfLastAndSharedWithCase" value="true"/>
        </module>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="MissingSwitchDefault"/>
        <module name="PackageDeclaration"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>

        <!-- Checks for blocks, i.e. { ... }               -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>

				<!-- Require the use of the "this" keyword -->
				<module name="RequireThis">
					<property name="validateOnlyOverlapping" value="false"/>
				</module>

				<!-- Enforce tabs -->
				<module name="RegexpSinglelineJava">
					<property name="format" value="^\t* ([^*]|\*[^ /])"/>
					<property name="message" value="non-tab indentation"/>
				</module>

				<module name="OuterTypeFilename"/>
				<module name="PackageDeclaration"/>

        <!-- Checks for K&R brace styling                                  -->
        <!-- See https://en.wikipedia.org/wiki/Indentation_style#K&R_style -->
        <module name="LeftCurly">
            <property name="ignoreEnums" value="false"/>
        </module>

        <!-- Checks for naming conventions                 -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Javadoc comments                    -->
        <!-- See https://checkstyle.org/config_javadoc.html -->
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocMethod"/>
        <module name="JavadocParagraph"/>
        <module name="JavadocStyle"/>
        <module name="JavadocType"/>
        <!-- <module name="MissingJavadocMethod"/> -->
        <!-- <module name="MissingJavadocPackage"/> -->
        <!-- <module name="MissingJavadocType"/> -->
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>
        <module name="SingleLineJavadoc"/>

        <!-- Checks for whitespace                             -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <!-- Allow PLUS, MINUS, MUL, DIV as they may be more readable without spaces in some cases -->
            <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
            <property name="allowEmptyCatches" value="true"/>
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
        </module>
        <!-- Miscellaneous checks                        -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>
    </module>
    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>
</module>
