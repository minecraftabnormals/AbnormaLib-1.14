plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
	id 'net.minecrell.licenser' version '0.4.1'
	id "org.ajoberstar.grgit" version "3.1.1"
	id 'com.matthewprenger.cursegradle' version "1.1.2"
	id 'moe.nikky.persistentCounter' version '0.0.8-SNAPSHOT'
}

def ENV = System.getenv()

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

if (rootProject.file('private.gradle').exists()) {
	apply from: 'private.gradle'
}

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version + "-" + "build." + project.build_number
group = project.maven_group

minecraft {
}

repositories {
	mavenCentral()
	mavenLocal()
	maven{ url="https://minecraft.curseforge.com/api/maven" }
	maven{ url="https://maven.fabricmc.net" }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modApi("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
		force = true
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-indigo")
	}

	compile "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}